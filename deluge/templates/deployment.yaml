apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "deluge.fullname" . }}
  labels:
    app: {{ template "deluge.name" . }}
    chart: {{ template "deluge.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "deluge.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "deluge.name" . }}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ template "deluge.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: deluged
          image: "{{ .Values.image.deluged.repository }}:{{ .Values.image.deluged.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          ports:
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
            - name: p2p-udp
              containerPort: {{ .Values.service.p2pPort }}
              protocol: UDP
          volumeMounts:
            - name: config
              mountPath: /config
              subPath: {{ .Values.persistence.config.subPath }}
            - name: downloads
              mountPath: /downloads
              subPath: {{ .Values.persistence.config.subPath }}
          readinessProbe:
            failureThreshold: {{ .Values.probes.failureThreshold }}
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            successThreshold: {{ .Values.probes.successThreshold }}
            tcpSocket:
              port: {{ .Values.service.p2pPort }}
        - name: delugeweb
          image: "{{ .Values.image.delugeweb.repository }}:{{ .Values.image.delugeweb.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          resources:
  {{ toYaml .Values.resources | indent 10 }}
          ports:
            - name: web
              containerPort: {{ .Values.service.webPort }}
          volumeMounts:
            - name: config
              mountPath: /config
              subPath: {{ .Values.persistence.config.subPath }}
          readinessProbe:
            failureThreshold: {{ .Values.probes.failureThreshold }}
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            successThreshold: {{ .Values.probes.successThreshold }}
            tcpSocket:
              port: {{ .Values.service.webPort }}
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim | default (include "deluge.fullname" .) }}
        - name: downloads
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.data.existingClaim | default (include "deluge.fullname" .) }}
